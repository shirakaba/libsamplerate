name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        name: [
          # linux-cmake,
          # linux-autotools,
          # macos-cmake,
          # macos-autotools,
          # windows-cmake,
          windows-x64-cmake-lib,
          windows-x64-cmake-dll,
          windows-arm64-cmake-lib,
          windows-arm64-cmake-dll,
        ]
        include:
          # - name: linux-cmake
          #   os: ubuntu-latest
          #   build-system: -DCMAKE_BUILD_TYPE=Release cmake

          # - name: linux-autotools
          #   os: ubuntu-latest
          #   build-system: autotools
          #   configure-options: --enable-sndfile --enable-alsa

          # - name: macos-cmake
          #   os: macos-latest
          #   build-system: -DCMAKE_BUILD_TYPE=Release cmake

          # - name: macos-autotools
          #   os: macos-latest
          #   build-system: autotools
          #   configure-options: --enable-sndfile

          - name: windows-x64-cmake-lib
            os: windows-latest
            build-system: cmake
            configure-options: -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows

          - name: windows-x64-cmake-dll
            os: windows-latest
            build-system: cmake
            configure-options: -DBUILD_SHARED_LIBS=ON -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows

          - name: windows-arm64-cmake-lib
            os: windows-latest
            build-system: cmake
            configure-options: -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=arm64-windows -A ARM64

          - name: windows-arm64-cmake-dll
            os: windows-latest
            build-system: cmake
            configure-options: -DBUILD_SHARED_LIBS=ON -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=arm64-windows -A ARM64

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    # - name: Install Linux dependencies
    #   if: startsWith(matrix.os,'ubuntu')
    #   run: |
    #     sudo apt-get update -y
    #     sudo apt-get install -y libsndfile-dev libopus-dev libfftw3-dev libasound2-dev

    # - name: Install macOS dependencies
    #   if: startsWith(matrix.os,'macos')
    #   run: brew install automake libtool libsndfile fftw

    - name: Install Windows dependencies for x64
      if: matrix.name == 'windows-x64-cmake-lib' || matrix.name == 'windows-x64-cmake-dll'
      run: |
        vcpkg install libsndfile:x64-windows opus:x64-windows fftw3:x64-windows

    - name: Install Windows dependencies for ARM64
      if: matrix.name == 'windows-arm64-cmake-lib' || matrix.name == 'windows-arm64-cmake-dll'
      run: |
        vcpkg install libsndfile:arm64-windows opus:arm64-windows fftw3:arm64-windows

    - name: Create CMake Build Environment
      if: startsWith(matrix.build-system,'cmake')
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      if: startsWith(matrix.build-system,'cmake')
      working-directory: ${{runner.workspace}}/build
      run: cmake ${{github.workspace}} ${{matrix.configure-options}}

    - name: Build CMake
      if: startsWith(matrix.build-system,'cmake')
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config Release

    # Need to disable this while -DBUILD_SHARED_LIBS=ON flag is set.
    # - name: Test CMake
    #   if: startsWith(matrix.build-system,'cmake')
    #   working-directory: ${{runner.workspace}}/build
    #   run: ctest -C Release

    # - name: Bootstrap Autotools
    #   if: startsWith(matrix.build-system,'autotools')
    #   run: ./autogen.sh

    # - name: Configure Autotools
    #   if: startsWith(matrix.build-system,'autotools')
    #   run: ./configure ${{matrix.configure-options}}

    # - name: Build Autotools
    #   if: startsWith(matrix.build-system,'autotools')
    #   run: make

    # - name: Test Autotools
    #   if: startsWith(matrix.build-system,'autotools')
    #   run: make distcheck

    - name: Upload Release Artifacts
      if: startsWith(matrix.build-system, 'cmake')
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}-release
        path: ${{runner.workspace}}/build
